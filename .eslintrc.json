{
  "root": true,
  "extends": ["plugin:@cspell/recommended"],
  "overrides": [
    /*
     * Typescript files.
     */
    {
      "files": ["*.ts"],
      "parser": "@typescript-eslint/parser",
      "env": {
        "node": true,
        "mocha": true
      },
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "plugin:@typescript-eslint/strict",
        "plugin:eslint-plugin/recommended",
        "plugin:security/recommended",
        // Enables eslint-plugin-prettier and eslint-config-prettier.
        // This will display Prettier errors as ESLint errors.
        // This should always be the last configuration in the extends array.
        "plugin:prettier/recommended"
      ],
      "plugins": ["@typescript-eslint", "eslint-plugin"],
      "parserOptions": {
        "project": ["./tsconfig.json"]
      },
      "rules": {
        "@typescript-eslint/array-type": ["error", { "default": "generic" }],
        "@typescript-eslint/consistent-type-imports": "error",
        "@typescript-eslint/explicit-function-return-type": "error",
        "@typescript-eslint/no-unused-vars": [
          "error",
          {
            "argsIgnorePattern": "_"
          }
        ],

        "eslint-plugin/consistent-output": ["error", "always"],
        "eslint-plugin/meta-property-ordering": ["error"],
        "eslint-plugin/no-deprecated-context-methods": ["error"],
        "eslint-plugin/prefer-object-rule": ["error"],
        "eslint-plugin/prefer-placeholders": ["error"],
        "eslint-plugin/prefer-replace-text": ["error"],
        "eslint-plugin/report-message-format": [
          "error",
          "^[A-Z].*(`{{prop}}`).*\\.$"
        ], // Must start with capital, end with period and contains placeholder for "prop".
        "eslint-plugin/require-meta-docs-url": ["error"],
        "eslint-plugin/require-meta-schema": ["error"],
        "eslint-plugin/require-meta-type": ["error"],
        "eslint-plugin/test-case-shorthand-strings": ["error", "consistent"]
      }
    },

    /*
     * JSON files.
     */
    {
      "files": ["*.json"],
      "extends": [
        "plugin:json/recommended-with-comments",
        // Enables eslint-plugin-prettier and eslint-config-prettier.
        // This will display Prettier errors as ESLint errors.
        // This should always be the last configuration in the extends array.
        "plugin:prettier/recommended"
      ]
    },

    /*
     * Markdown files.
     */
    {
      "files": ["*.md"],
      "parser": "eslint-plugin-markdownlint/parser",
      "extends": [
        "plugin:markdownlint/recommended",
        // Enables eslint-plugin-prettier and eslint-config-prettier.
        // This will display Prettier errors as ESLint errors.
        // This should always be the last configuration in the extends array.
        "plugin:prettier/recommended"
      ],
      "rules": {
        "markdownlint/md013": "off", // Disable line length.
        "markdownlint/md033": ["error", { "allowed_elements": ["br"] }], // Allow br-element.
        "prettier/prettier": ["error", { "parser": "markdown" }]
      }
    }
  ]
}
