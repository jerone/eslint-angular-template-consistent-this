name: CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - run: npm ci --no-fund
      - run: npm run lint

  test:
    runs-on: ubuntu-latest
    name: "test (Node.js ${{ matrix.node-version }}, ESLint ${{ matrix.eslint-version }}, Angular ESLint ${{ matrix.angular-eslint-version[0] }})"
    strategy:
      fail-fast: false # Run all jobs, even when previous fails.
      matrix:
        # Run on latest and Angular supported Node.js versions,
        # and assume that the intermediate versions are good.
        node-version:
          # Angular supported Node.js versions.
          # https://gist.github.com/LayZeeDK/c822cc812f75bb07b7c55d07ba2719b3
          - 14.15.0
          - 16.10.0
          - 18.10.0
          # Latest Node.js version.
          - latest
        eslint-version: [7, 8]
        # Angular ESLint version, and corresponding typescript-eslint version.
        angular-eslint-version:
          - [13, "5.27.1"]
          - [14, "latest"]
          - [15, "latest"]
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - name: Install packages
        run: npm ci --no-fund
      - name: Install Angular ESLint ${{ matrix.angular-eslint-version[0] }}
        run: |
          npm install --save-dev \
            @angular-eslint/template-parser@${{ matrix.angular-eslint-version[0] }} \
            @angular-eslint/utils@${{ matrix.angular-eslint-version[0] }} \
            @angular/compiler@${{ matrix.angular-eslint-version[0] }} \
            @typescript-eslint/eslint-plugin@${{ matrix.angular-eslint-version[1] }} \
            @typescript-eslint/parser@${{ matrix.angular-eslint-version[1] }}
      - name: Install ESLint ${{ matrix.eslint-version }}
        run: npm install --save-dev eslint@${{ matrix.eslint-version }}
      - name: Run tests
        run: npm run test
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure() # Run this step even if previous step failed.
        with:
          name: "test report (Node.js ${{ matrix.node-version }}, ESLint ${{ matrix.eslint-version }}, Angular ESLint ${{ matrix.angular-eslint-version[0] }})"
          path: coverage/junit.xml
          reporter: jest-junit

  copyright:
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: FantasticFiasco/action-update-license-year@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
        id: license
      - name: Merge PR
        if: steps.license.outputs.pullRequestNumber != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh pr merge --rebase --delete-branch ${{ steps.license.outputs.pullRequestNumber }}
